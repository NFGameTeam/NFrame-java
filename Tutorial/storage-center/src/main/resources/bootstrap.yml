#端口配置
server:
  port: 7001   #固定端口
#  port: ${randomServerPort.value[7000,7005]}  #随机端口

#metrics
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    chaosmonkey:
      enabled: true
    health:
      show-details: always

spring:
  cloud:
    nacos:
      config:
        # 共享配置的DataId，多个使用,分隔
        # 越靠后，优先级越高；
        # .yaml后缀不能少，只支持yaml/properties
        shared-dataids: common.yaml         ### 共享配置
        refreshable-dataids: common.yaml    ### 可刷新共享配置
        server-addr: 127.0.0.1:8848    ### nacos server地址
        file-extension: yaml                ### dataId扩展名
        namespace: adb19121-cfe9-4aa6-bb9f-a1fa18fdbd3e  #命名空间 代指某个环境
    sentinel:
      transport:
        # 指定sentinel 控制台的地址
        dashboard: 127.0.0.1:8080
      eager: true
  application:
    name: storage-center
  #自动生成表的配置
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
  datasource:
    druid:
      db-type: com.alibaba.druid.pool.DruidDataSource
      driverClassName: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      url:  jdbc:log4jdbc:mysql://localhost:3306/storage-center?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false
      username: root
      password: rootroot
      # 初始连接数
      initial-size: 5
      # 最小连接数
      min-idle: 10
      # 最大连接数
      max-active: 20
      # 获取连接超时时间
      max-wait: 5000
      # 连接有效性检测时间
      time-between-eviction-runs-millis: 60000
      # 连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      # 连接在池中最大生存的时间
      max-evictable-idle-time-millis: 900000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 检测连接是否有效
      validation-query: select 1
      # 配置监控统计
      webStatFilter:
        enabled: true
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
      filter:
        stat:
          enabled: true
          # 记录慢SQL
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
  redis:
    ################### redis 单机版 start ##########################
    host: 127.0.0.1
    port: 6379
    timeout: 6000
    database: 8
    lettuce:
      pool:
        max-active: 10 # 连接池最大连接数（使用负值表示没有限制）,如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)
        max-idle: 8   # 连接池中的最大空闲连接 ，默认值也是8
        max-wait: 100 # # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
        min-idle: 2    # 连接池中的最小空闲连接 ，默认值也是0
      shutdown-timeout: 100ms
################### redis 单机版 end ##########################
#    cluster:
#      nodes: 130.75.131.237:7000,130.75.131.238:7000,130.75.131.239:7000,130.75.131.237:7001,130.75.131.238:7001,130.75.131.239:7001
#        #130.75.131.237:7000,130.75.131.238:7000,130.75.131.239:7000,130.75.131.237:7001,130.75.131.238:7001,130.75.131.239:7001
#        #192.168.3.157:7000,192.168.3.158:7000,192.168.3.159:7000,192.168.3.157:7001,192.168.3.158:7001,192.168.3.159:7001
#    timeout: 1000 # 连接超时时间（毫秒）
#    lettuce:
#      pool:
#        max-active: 10 # 连接池最大连接数（使用负值表示没有限制）,如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)
#        max-idle: 8   # 连接池中的最大空闲连接 ，默认值也是8
#        max-wait: 100 # # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
#        min-idle: 2    # 连接池中的最小空闲连接 ，默认值也是0
#      shutdown-timeout: 100ms

security:
  oauth2:
    ignored: /files-anon/**  , /doc.html  ,/upload.html , /uploads.html ,/js/** ,/document.html
    token:
      store:
        type: redis

#设置最大超时时间
ribbon:
  ServerListRefreshInterval: 10  #刷新服务列表源的间隔时间
  OkToRetryOnAllOperations: true
  MaxAutoRetries: 1
  MaxAutoRetriesNextServer: 1
  ReadTimeout: 16000
  ConnectTimeout: 16000

#设置最大容错超时时间
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 16000






logging:
  level:
    com.open.capacity: INFO
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
#    com.neusoft: DEBUG
#    com.netflix: DEBUG                    #用于心跳检测输出的日志


#密码加密传输，前端公钥加密，后端私钥解密
rsa:
  private_key: MIIBUwIBADANBgkqhkiG9w0BAQEFAASCAT0wggE5AgEAAkEA0vfvyTdGJkdbHkB8mp0f3FE0GYP3AYPaJF7jUd1M0XxFSE2ceK3k2kw20YvQ09NJKk+OMjWQl9WitG9pB6tSCQIDAQABAkA2SimBrWC2/wvauBuYqjCFwLvYiRYqZKThUS3MZlebXJiLB+Ue/gUifAAKIg1avttUZsHBHrop4qfJCwAI0+YRAiEA+W3NK/RaXtnRqmoUUkb59zsZUBLpvZgQPfj1MhyHDz0CIQDYhsAhPJ3mgS64NbUZmGWuuNKp5coY2GIj/zYDMJp6vQIgUueLFXv/eZ1ekgz2Oi67MNCk5jeTF2BurZqNLR3MSmUCIFT3Q6uHMtsB9Eha4u7hS31tj1UWE+D+ADzp59MGnoftAiBeHT7gDMuqeJHPL4b+kC+gzV4FGTfhR9q3tTbklZkD2A==


#阿里云文件上传
#aliyun:
#  oss:
#    access-key: LTAIMjvZWiXRuClW
#    accessKeySecret: YwJar7gkdZx3Q3Zk6TRuEAWaAz6n8y
#    endpoint: oss-cn-beijing.aliyuncs.com
#    bucketName: owenwangwen
#    domain: https://owenwangwen.oss-cn-beijing.aliyuncs.com
##七牛文件上传
#qiniu:
#  oss:
#    access-key: owGiAWGn6DpU5zlrfLP4K9iQusahmspTW6PxRABW
#    accessKeySecret: 5CBWKFd1pP-OSiusd1Bvhokp-ih4i3bs2QA2r-U2
#    endpoint: http://qdq0w5d1e.bkt.clouddn.com
#    bucketName: testic
## 本地文件上传
file:
  oss:
    domain: http://127.0.0.1:9200/api-file
    path: d:/uploadshp
    prefix: /statics

#fastDFS配置
fdfs:
  oss :
    ##nginx需要安装fastdfs插件
    domain: http://thbdm.gxtianhai.cn/thbs/resource/
  soTimeout: 1500
  connectTimeout: 600
  pool:
    jmx-enabled: false
  trackerList: 119.29.87.198:22122
